// This file will be processed by CMake to generate config.h

#ifndef GOOGLE_PERFTOOLS_CONFIG_H_
#define GOOGLE_PERFTOOLS_CONFIG_H_

#include <cstdint>

/* Use *.h extension for parser header file */
/* #undef BISON_USE_PARSER_H_EXTENSION */

/* Defines bison version */
#define BISON_VERSION   ${BISON_VERSION}

#cmakedefine DEVEL
#cmakedefine NDEBUG

#ifndef NDEBUG
#define DEBUG
#endif

#cmakedefine HAVE_GPERFTOOLS
#cmakedefine01 HAVE_GPERFTOOLS_TCMALLOC_H

/* Define to 1 if you have the `z' library (-lz). */
#cmakedefine01 HAVE_LIBZ

/* Define to 1 if you have the <omp.h> header file. */
#define HAVE_OMP_H 1

/* enable tcmalloc */
#cmakedefine HAVE_TCMALLOC

/* prefix where we look for installed files */
#define INSTALL_PREFIX "/usr/local"

/* Define to 1 if int32_t is equivalent to intptr_t */
/* #undef INT32_EQUALS_INTPTR */

/* enable opt minmax */
#cmakedefine KWBT_OPT

/* library directory */
#define LIB_DIR "/liba"

/* Define to the sub-directory in which libtool stores uninstalled libraries.
 */
#define LT_OBJDIR ".libs/"

/* Define to 'volatile' if __malloc_hook is declared volatile */
#define MALLOC_HOOK_MAYBE_VOLATILE volatile

/* enable minimal state */
#cmakedefine MINIMAL_STATE

/* Name of package */
#define PACKAGE "@CMAKE_PROJECT_NAME@"

/* Define to the address where bug reports for this package should be sent. */
#define PACKAGE_BUGREPORT "@SLIM_BUGREPORT@"

/* Define to the full name of this package. */
#define PACKAGE_NAME "@SLIM_PACKAGE_NAME@"

/* Define to the full name and version of this package. */
#define PACKAGE_STRING "@SLIM_PACKAGE_NAME@ @CMAKE_PROJECT_VERSION@"

/* Define to the one symbol short name of this package. */
#define PACKAGE_TARNAME "@CMAKE_PROJECT_NAME@"

/* Define to the home page for this package. */
#define PACKAGE_URL "@SLIM_URL@"

/* Define to the version of this package. */
#define PACKAGE_VERSION "@CMAKE_PROJECT_VERSION@"

/* How to access the PC from a struct ucontext */
/* #undef PC_FROM_UCONTEXT */

/* Always the empty-string on non-windows systems. On windows, should be
   "__declspec(dllexport)". This way, when we compile the dll, we export our
   functions/classes. It's safe to define this here because config.h is only
   used internally, to compile the DLL, and every DLL source file #includes
   "config.h" before anything else. */
#define PERFTOOLS_DLL_DECL /**/

/* printf format code for printing a size_t and ssize_t */
#define PRIdS "ld"

/* printf format code for printing a size_t and ssize_t */
#define PRIuS "lu"

/* printf format code for printing a size_t and ssize_t */
#define PRIxS "lx"

/* enable profile */
#cmakedefine PROFILE

/* root directory */
#define ROOT_DIR "${exec_prefix}/lib"

/* The size of `double', as computed by sizeof. */
#define SIZEOF_DOUBLE @SIZEOF_DOUBLE@

/* The size of `long', as computed by sizeof. */
#define SIZEOF_LONG @SIZEOF_LONG@

/* The size of `uintptr_t', as computed by sizeof. */
#define SIZEOF_UINTPTR_T @SIZEOF_UINTPTR_T@

/* The size of `void*', as computed by sizeof. */
#define SIZEOF_VOIDP @SIZEOF_VOID_P@

/* slim version */
#define SLIM_VERSION "@CMAKE_PROJECT_VERSION@"

/* Define to 1 if all of the C90 standard headers exist (not just the ones
   required in a freestanding environment). This macro is provided for
   backward compatibility; new code need not use it. */
enum { STDC_HEADERS = 1 };

/* the namespace where STL code like vector<> is defined */
#define STL_NAMESPACE std

/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. This
   macro is obsolete. */
#cmakedefine01 TIME_WITH_SYS_TIME

/* enable cunit */
#cmakedefine USE_CUNIT

/* enable first class rule */
#cmakedefine USE_FIRSTCLASS_RULE

/* enable jni */
#cmakedefine USE_JNI

/* Version number of package */
#define VERSION "@CMAKE_PROJECT_VERSION@"

/* Define if using the dmalloc debugging malloc package */
/* #undef WITH_DMALLOC */

/* Define to 1 if `lex' declares `yytext' as a `char *' by default, not a
   `char[]'. */
#define YYTEXT_POINTER 1

/* Define to 1 if type `char' is unsigned and your compiler does not
   predefine this macro.  */
#ifndef __CHAR_UNSIGNED__
/* # undef __CHAR_UNSIGNED__ */
#endif

/* C99 says: define this to get the PRI... macros from stdint.h */
#ifndef __STDC_FORMAT_MACROS
#define __STDC_FORMAT_MACROS 1
#endif

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
/* #undef inline */
#endif

/* Define to the type of a signed integer type wide enough to hold a
   pointer, if such a type exists, and if the system does not define it. */
/* #undef intptr_t */

/* Define to the equivalent of the C99 'restrict' keyword, or to
   nothing if this is not supported.  Do not define if restrict is
   supported only directly.  */
#define restrict /**/
/* Work around a bug in older versions of Sun C++, which did not
   #define __restrict__ or support _Restrict or __restrict__
   even though the corresponding Sun C compiler ended up with
   "#define restrict _Restrict" or "#define restrict __restrict__"
   in the previous line.  This workaround can be removed once
   we assume Oracle Developer Studio 12.5 (2016) or later.  */
#if defined __SUNPRO_CC && !defined __RESTRICT && !defined __restrict__
#define _Restrict
#define __restrict__
#endif

#ifdef __MINGW32__
#include "windows/mingw.h"
#endif

#endif /* #ifndef GOOGLE_PERFTOOLS_CONFIG_H_ */